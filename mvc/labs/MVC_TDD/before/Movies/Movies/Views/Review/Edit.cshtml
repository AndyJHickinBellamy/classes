@model Movies.Models.Review

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@Html.Script("jquery.validate.js")
@Html.Script("jquery.validate.unobtrusive.js")
@Html.Script("CustomValidations.js")

@{ Html.EnableClientValidation(true); }
@using (Html.BeginForm()) {
    @Html.ValidationSummary(true)
    <fieldset>
        <legend>Review</legend>

        @Html.HiddenFor(model => model.ID)

        <div class="editor-label">
            @Html.LabelFor(model => model.Summary)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Summary)
            @Html.ValidationMessageFor(model => model.Summary)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Rating)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Rating)
            @Html.ValidationMessageFor(model => model.Rating)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Body)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Body)
            @Html.ValidationMessageFor(model => model.Body)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Reviewer)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Reviewer)
            @Html.ValidationMessageFor(model => model.Reviewer)
        </div>

        <p>
            <input type="submit" value="Save" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to " + Model.Movie.Title,
                     "Details", "Movie", new { id = Model.MovieID }, 
                     null)
</div>

